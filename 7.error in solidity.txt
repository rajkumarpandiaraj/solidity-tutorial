                        7.Error in Solidity

There are  some ways to through a error
    require, revert, assert
    if we throw the error, the gas used got refunded and state variables updates are reverted.

    And there is Custom error
        It is used to save the gas

Example

    pragma solidity ^0.8.7

    contract Error {
        //require
        //It is used to check the arguments

        function testrequired(uint i) public pure{
            // if i < 10, it throw the error i should greater than 10
            require(i < 10, "i > 10");
            //other codes
        }



        //revert
        //It is same as require, but it is used to check the multiple or nested condtn

         function testRevert(uint i) public pure{

            // if i < 10, it throw the error i should greater than 10
            if(i < 10){
                revert('i > 10');
            }
            //other codes
        }


        //assert
        //assert checks the cdtn which should be always true,
        //if it is false, it throws an error

        uint public num = 123;
        function testAssert(uint i) public view{
            assert(num == 123);

            //if we accidently change the num vaue in the code somewhere
            // while calling this function, the assert condtn in false and throws an error.
        }


        //Custom error
        // if we use the longer error text in the require/ revert
        //it consumes more gas.
        //to avoid that use custom error

        //declaring custom error
        error MyError()

        function testRevert(uint i) public pure{
            if(i < 10){
                revert MyError()
            }
            //other codes
        }

        //we can send arg while calling the error to print msg

        //declaring custom error
        error MyError(address caller, uint i)

        function testRevert(uint i) public pure{
            if(i < 10){
                revert MyError(msg.sender,i)
            }
            //other codes
        }




    }