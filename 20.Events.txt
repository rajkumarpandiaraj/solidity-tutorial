                                    20.Events


Events are defined within the contracts as global and called within their functions. 
Events are declared by using the event keyword, followed by an identifier and the parameter list, and ends with a semicolon. 
The parameter values are used to log the information or for executing the conditional logic. 
Its information and values are saved as part of the transactions inside the block. 
There is no need of providing variables, only datatypes are sufficient. 
An event can be called from any method by using its name and passing the required parameters.

event <eventName>(parameters) ; 

example

// Solidity program to demonstrate
// creating an event
pragma solidity ^0.4.21;

// Creating a contract
contract eventExample {

	// Declaring state variables
	uint256 public value = 0;

	// Declaring an event
	event Increment(address owner);

	// Defining a function for logging event
	function getValue(uint _a, uint _b) public {
		emit Increment(msg.sender);
		value = _a + _b;
	}
}


// *****************************

Index in events: We can also add an index to our event. 
On adding the different fields to our event, we can add an index to them it helps to access them later but of course,
 itâ€™s going to cost some more gas!

IMP: We can add atmost 3 indexes in one event. 

Example :
// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;


contract IndexEvents {

	event NewTrade(
		uint256 indexed date,
		address from,
		address indexed to,
		uint256 indexed amount
	);

	function trade(address to, uint256 amount) external {
		emit NewTrade(block.timestamp, msg.sender, to,amount);
	}
}

Output :
logs [
	{
		"from": "0xcD6a42782d230D7c13A74ddec5dD140e55499Df9",
		"topic": "0xa6b5ddd331f9dc412a8c258207b1c66f53c1740c72628d9913aafcb6b28d8f73",
		"event": "NewTrade",
		"args": {
			"0": "1655406115",
			"1": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4",
			"2": "0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",
			"3": "1234",
			"date": "1655406115",
			"from": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4",
			"to": "0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2",
			"amount": "1234"
		}
	}
]


