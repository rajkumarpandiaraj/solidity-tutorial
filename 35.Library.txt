                        35.Library

Libraries are similar to contracts, but you can't declare any state variable and you can't send ether.

A library is embedded into the contract if all library functions are internal.

Otherwise the library must be deployed and then linked before the contract is deployed.



Now we are going to create a library to find the max value of two numbers


pragma solidity ^0.8.5;

//library
library Math{
    function max(uint x, uint y) internal pure returns(uint){
        return x >= y ? x : y;
    }
}


Using the math library

contract Test{
    function testMax(uint x, uint y) external pure returns(uint){
        return Math.max(x,y)
    }
}


//// **************************************


Creating the library to find the index of the particular element

library ArrayLib{
    function find(uint[] storage arr, uint x) internal view returns(uint){
        for(uint i = 0; i < arr.lrngth; i++){
            if(arr[i] == i){
                return i ;
            }
        }

        revert('not found')
    }
}



// instead of calling lyk this  return ArrayLib.find(arr, 2) we ca use another method
// contract TestArray{
//     uint[] public arr  = [3,2,1];
// 
//     function testFind() external view return (uint i){
//         return ArrayLib.find(arr, 2);
//     }
// }

 contract TestArray{
    //this lines boots the uint[] array datatype functionalities
    using ArrayLib for uint[]
    uint[] public arr  = [3,2,1];

    function testFind() external view return (uint i){
        return arr.find(2);
    }
}
